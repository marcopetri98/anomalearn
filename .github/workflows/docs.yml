name: Build and deploy docs to pages

on:
  push:
    branches: ["master"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    name: Build the docs
    environment:
      name: github-pages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ vars.PYTHON_VERSION_DOCS }}
      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ vars.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: false
          installer-parallel: true
      - name: Prepare poetry environment
        run: poetry install --with dev,docs --sync
      - name: Create user api
        run: poetry run python ./doc_creator.py --max-depth 2 -d -i --show-inherited-members --mod-separate anomalearn
      - name: Create developer api
        run: poetry run python ./doc_creator.py -a ./developer/api --max-depth 2 -p -P -d -i --show-inherited-members --mod-separate anomalearn
      - name: Run sphinx
        run: poetry run sphinx-build -b html ${{ vars.DOCS_SOURCE_DIR }} ${{ vars.DOCS_OUTPUT_DIR }}
      - name: Fix sphinx broken links
        run: poetry run python ./doc_fix_dev_api.py ${{ vars.DOCS_OUTPUT_DIR }}
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ vars.DOCS_OUTPUT_DIR }}

  deploy:
    name: Deploy the docs
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
